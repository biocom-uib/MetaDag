[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Guide to Interpreting the Results of MetaDAG Analysis",
    "section": "",
    "text": "1 Introduction\nAs an illustrative example for interpreting metaDAG results, we consider here the Eukaryotes test presented in Section 2.5. Namely, we consider all Eukaryotes from the KEGG database. Experiment github.\nFirst of all, results must be downloaded from:\nHash: 0a845f74-826e-3b46-aed9-e7ecf74db262\nURL: (https://bioinfo.uib.es/metadag/handleExperiment/result_0a845f74-826e-3b46-aed9-e7ecf74db262)\nand saved in the folder:\n“data/result_0a845f74-826e-3b46-aed9-e7ecf74db262”.\n\nlibrary(tidyverse)\nlibrary(igraph)\nlibrary(ComplexHeatmap)\nlibrary(viridis)\nlibrary(circlize)\nlibrary(plotly)\nlibrary(randomcoloR)\nlibrary(factoextra)\nlibrary(RColorBrewer)\nlibrary(kableExtra)\nlibrary(igraph)\nlibrary(GGally)"
  },
  {
    "objectID": "load_data.html#load-metadata",
    "href": "load_data.html#load-metadata",
    "title": "2  Load data",
    "section": "2.1 Load metadata",
    "text": "2.1 Load metadata\nOrganisms are sorted by Kingdom, Phylum and Class:\n\npath_exp\n\n[1] \"data/result_0a845f74-826e-3b46-aed9-e7ecf74db262/\"\n\nResults=read_csv(paste0(path_exp,\"Results.csv\"))\n#rename MetaDaG variables\nnames(Results)[c(1,2,3,4,5)]=c(\"Organism\",\"Categories\",\"Groups\",\"mDAG_Id\",\"Full_Name\")\ntaxo=Results %&gt;% select(Organism:Full_Name)\nmeta_taxo=taxo %&gt;% separate(Categories,into=c(\"Kingdom\",\"Phylum\",\"Class\"))\nindex=which(is.na(meta_taxo$Class))\nmeta_taxo$Class[index]=paste(meta_taxo$Phylum[index])\nrm(taxo)\naux=table(meta_taxo$Kingdom)\nFreq_Kingdom=tibble(Kingdom=names(aux),Freq_Kingdom=aux)\naux=table(meta_taxo$Phylum)\nFreq_Phylum=tibble(Phylum=names(aux),Freq_Phylum=aux)\naux=table(meta_taxo$Class)\nFreq_Class=tibble(Class=names(aux),Freq_Class=aux)\n\nmeta_taxo = meta_taxo %&gt;%\n    left_join(Freq_Kingdom) %&gt;% \n  left_join(Freq_Phylum) %&gt;%\n  left_join(Freq_Class)\nmeta_taxo = meta_taxo %&gt;% \n  arrange(desc(Freq_Kingdom),\n          desc(Freq_Phylum),\n          desc(Freq_Class))\n\n#arrange metaxto by frequencies of kingom phylum and class\n\n\nknitr::kable(head(meta_taxo))\n\n\n\n\nOrganism\nKingdom\nPhylum\nClass\nGroups\nmDAG_Id\nFull_Name\nFreq_Kingdom\nFreq_Phylum\nFreq_Class\n\n\n\n\naamp\nAnimals\nVertebrates\nMammals\nCluster 1\n0313\nArvicola amphibius (Eurasian water vole)\n535\n331\n139\n\n\nafz\nAnimals\nVertebrates\nMammals\nCluster 1\n0143\nAntechinus flavipes (yellow-footed antechinus)\n535\n331\n139\n\n\najm\nAnimals\nVertebrates\nMammals\nCluster 1\n0221\nArtibeus jamaicensis (Jamaican fruit-eating bat)\n535\n331\n139\n\n\naju\nAnimals\nVertebrates\nMammals\nCluster 1\n0224\nAcinonyx jubatus (cheetah)\n535\n331\n139\n\n\naml\nAnimals\nVertebrates\nMammals\nCluster 1\n0279\nAiluropoda melanoleuca (giant panda)\n535\n331\n139\n\n\nanu\nAnimals\nVertebrates\nMammals\nCluster 1\n0310\nArvicanthis niloticus (African grass rat)\n535\n331\n139\n\n\n\n\n\n\n\n\ntable(meta_taxo$Kingdom) %&gt;% kable %&gt;%\n  kable_styling(\"striped\", full_width = F,position=\"left\")%&gt;% \n  scroll_box(width = \"400px\", height = \"200px\")\n\n\n\n\n\nVar1\nFreq\n\n\n\n\nAnimals\n535\n\n\nFungi\n154\n\n\nPlants\n139\n\n\nProtists\n56\n\n\n\n\n\n\ntable(meta_taxo$Phylum,meta_taxo$Kingdom) %&gt;% kable %&gt;%\n  kable_styling(\"striped\", full_width = F,position=\"left\")%&gt;% \n  scroll_box(width = \"500px\", height = \"500px\")\n\n\n\n\n\n\nAnimals\nFungi\nPlants\nProtists\n\n\n\n\nAlveolates\n0\n0\n0\n25\n\n\nAmoebozoa\n0\n0\n0\n7\n\n\nAnnelids\n1\n0\n0\n0\n\n\nArthropods\n158\n0\n0\n0\n\n\nAscomycetes\n0\n113\n0\n0\n\n\nBasal\n0\n0\n2\n0\n\n\nBasidiomycetes\n0\n36\n0\n0\n\n\nBrachiopodas\n1\n0\n0\n0\n\n\nCephalochordates\n2\n0\n0\n0\n\n\nChoanoflagellates\n0\n0\n0\n2\n\n\nCnidarians\n10\n0\n0\n0\n\n\nCryptomonads\n0\n0\n0\n1\n\n\nEchinoderms\n3\n0\n0\n0\n\n\nEudicots\n0\n0\n98\n0\n\n\nEuglenozoa\n0\n0\n0\n9\n\n\nFerns\n0\n0\n1\n0\n\n\nFlatworms\n4\n0\n0\n0\n\n\nGreen\n0\n0\n11\n0\n\n\nHaptophyta\n0\n0\n0\n1\n\n\nHemichordates\n1\n0\n0\n0\n\n\nHeterolobosea\n0\n0\n0\n1\n\n\nMetamonada\n0\n0\n0\n2\n\n\nMicrosporidians\n0\n5\n0\n0\n\n\nMollusks\n14\n0\n0\n0\n\n\nMonocots\n0\n0\n23\n0\n\n\nMosses\n0\n0\n1\n0\n\n\nNematodes\n6\n0\n0\n0\n\n\nPlacozoans\n1\n0\n0\n0\n\n\nPoriferans\n1\n0\n0\n0\n\n\nRed\n0\n0\n3\n0\n\n\nStramenopiles\n0\n0\n0\n8\n\n\nTunicates\n2\n0\n0\n0\n\n\nVertebrates\n331\n0\n0\n0"
  },
  {
    "objectID": "load_data.html#table-of-mbbs",
    "href": "load_data.html#table-of-mbbs",
    "title": "2  Load data",
    "section": "2.2 Table of MBBs",
    "text": "2.2 Table of MBBs\nIn this example MBB is a table with 5149 rows and 4122 columns. It displays, for every MBB, the selected groups (Kingdoms, families, etc.) to which it belongs.\n\n#100\nknitr::kable(MBB[1:20,1:10]) %&gt;%   \n  scroll_box(width = \"100%\", height = \"200px\")\n\n\n\n\n\nMBB Id\nnatural\n#pathways\nProtists\nFungi\nPlants\nAnimals\nAlveolates\nAmoebozoa\nAnnelids\n\n\n\n\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n0.0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n0.0.0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n0.0.0.0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.0.0.0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.0.0.0.0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.0.1\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.0.2\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n0.0.1.0\n1\n1\n0\n0\n0\n1\n0\n0\n1\n\n\n0.0.1.1\n1\n1\n1\n0\n0\n0\n0\n0\n0\n\n\n0.0.1.1.0\n1\n1\n1\n0\n0\n0\n0\n0\n0\n\n\n0.0.1.2\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.3\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.4\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.4.0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.4.0.0\n1\n1\n0\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.5\n1\n1\n1\n0\n0\n0\n0\n0\n0\n\n\n0.0.1.6\n1\n4\n3\n0\n0\n1\n0\n0\n0\n\n\n0.0.1.6.0\n1\n3\n0\n0\n3\n0\n0\n0\n0"
  },
  {
    "objectID": "load_data.html#table-of-m-dags",
    "href": "load_data.html#table-of-m-dags",
    "title": "2  Load data",
    "section": "2.3 Table of m-DAGs",
    "text": "2.3 Table of m-DAGs\nIn this example mDAG is a table with 1132 rows and 5278 columns. It displays, for every m-DAG, the selected groups (Kingdoms, families, etc.) in which it belongs.\n\nkable(mDAG[1:20,1:10]) %&gt;%   scroll_box(width = \"100%\", height = \"200px\")\n\n\n\n\n\nmDAG Id\n#Categories\nAnimals\nPlants\nFungi\nProtists\nAlveolates\nAmoebozoa\nAnnelids\nArthropods\n\n\n\n\n0001\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0002\n2\n0\n0\n1\n0\n0\n0\n0\n0\n\n\n0003\n2\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0004\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0005\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0006\n3\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n0007\n2\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n0008\n3\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n0009\n3\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n0010\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0011\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0012\n3\n0\n0\n0\n1\n0\n0\n0\n0\n\n\n0013\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0014\n3\n0\n0\n0\n1\n1\n0\n0\n0\n\n\n0015\n2\n0\n0\n1\n0\n0\n0\n0\n0\n\n\n0016\n3\n0\n0\n0\n1\n0\n1\n0\n0\n\n\n0017\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0018\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n0019\n3\n1\n0\n0\n0\n0\n0\n0\n1\n\n\n0020\n3\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n\n\n\n\ndim(mDAG)\n\n[1] 1132 5278\n\nnames(mDAG)[1:6]\n\n[1] \"mDAG Id\"     \"#Categories\" \"Animals\"     \"Plants\"      \"Fungi\"      \n[6] \"Protists\"   \n\nhead(names(mDAG)[7:(dim(mDAG)[2]-1150)])\n\n[1] \"Alveolates\"        \"Amoebozoa\"         \"Annelids\"         \n[4] \"Arthropods\"        \"Ascomycetes\"       \"Basal angiosperms\"\n\n# 28 to 1213  code MBB: 1 if MBB in mDAG 0"
  },
  {
    "objectID": "load_data.html#results-table",
    "href": "load_data.html#results-table",
    "title": "2  Load data",
    "section": "2.4 Results Table",
    "text": "2.4 Results Table\nThe Results table contains for every organism (row) the following information: its category (taxonomy), selected group, Full name, m-DAG id and all reactions name id with their corresponding enzyme. When a reaction is present in the corresponding m-DAG, the MBB to which it belongs is displayed in this column.\n\nkable(Results[1:20,1:10])%&gt;%\n  row_spec(0, angle = 0) %&gt;%   \n  scroll_box(width = \"300%\", height = \"1000px\")\n\n\n\n\n\nOrganism\nCategories\nGroups\nmDAG_Id\nFull_Name\nR00005(3.5.1.54)\nR00009(1.11.1.6)\nR00010(3.2.1.28)\nR00014(1.2.4.1)\nR00014(4.1.1.1)\n\n\n\n\naaf\nProtists|Stramenopiles|Pelagophytes\nMSA Cluster 3|MUN Cluster 3\n0036\nAureococcus anophagefferens\nNA\nNA\n0.0.10.0.15\n0.0.10.0.15\nNA\n\n\naag\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0035\nAedes aegypti (yellow fever mosquito)\nNA\n3936\n0.9.27.7.36.14\n0.9.27.7.36.14\nNA\n\n\naalb\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0276\nAedes albopictus (Asian tiger mosquito)\nNA\n3936\n0.9.27.7.36.18\n0.9.27.7.36.18\nNA\n\n\naali\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0267\nAnopheles albimanus\nNA\n3936\n0.9.27.7.36.65\n0.9.27.7.36.65\nNA\n\n\naalt\nFungi|Ascomycetes|Dothideomycetes\nFungui and Algae|MSA Cluster 3|MSA Fungui and Nematodes and Flatworms|MUN Cluster 3|MUN Fungui and Nematodes and Flatworms\n0240\nAlternaria alternata\nNA\n3936\n0.0.9.20.0.5.6.7\n0.0.9.20.0.5.6.7\n0.0.9.20.0.5.6.7\n\n\naam\nAnimals|Vertebrates|Birds\nCluster 1\n0040\nApteryx mantelli mantelli (North Island brown kiwi)\nNA\n3936\nNA\n0.9.26.15.46\nNA\n\n\naamp\nAnimals|Vertebrates|Mammals\nCluster 1\n0313\nArvicola amphibius (Eurasian water vole)\nNA\n3936\n0.0.9.20.0.6.0.39\n0.9.26.18.2.0\nNA\n\n\naang\nAnimals|Vertebrates|Fishes\nCluster 1\n0317\nAnguilla anguilla (European eel)\nNA\n3936\n0.0.9.20.0.6.0.39\n0.9.26.17.0.0\nNA\n\n\naara\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0362\nAnopheles arabiensis\nNA\n3936\n0.9.27.7.36.34\n0.9.27.7.36.34\nNA\n\n\nabe\nFungi|Ascomycetes|Eurotiomycetes\nFungui and Algae|MSA Cluster 3|MSA Fungui and Nematodes and Flatworms|MUN Cluster 3|MUN Fungui and Nematodes and Flatworms\n0060\nTrichophyton benhamiae\nNA\n3936\n0.0.9.20.0.5.7.0\n0.0.9.20.0.5.7.0\n0.0.9.20.0.5.7.0\n\n\nabp\nFungi|Basidiomycetes\nFungui and Algae|MSA Cluster 3|MSA Fungui and Nematodes and Flatworms|MUN Cluster 3|MUN Fungui and Nematodes and Flatworms\n0068\nAgaricus bisporus var. burnettii JB137-S8\nNA\n3936\n0.0.9.20.0.6.1\n0.0.9.20.0.6.1\n0.0.9.20.0.6.1\n\n\nabv\nFungi|Basidiomycetes\nFungui and Algae|MSA Cluster 3|MSA Fungui and Nematodes and Flatworms|MUN Cluster 3|MUN Fungui and Nematodes and Flatworms\n0073\nAgaricus bisporus var. bisporus H97\nNA\n3936\n0.0.9.20.0.6.3\n0.0.9.20.0.6.3\n0.0.9.20.0.6.3\n\n\nacan\nProtists|Amoebozoa|Acanthamoeba\nMSA Cluster 3|MUN Cluster 3\n0873\nAcanthamoeba castellanii\nNA\n3936\nNA\n0.0.10.0.3\nNA\n\n\nacar\nAnimals|Vertebrates|Birds\nCluster 1\n0884\nAntrostomus carolinensis (chuck-will's-widow)\nNA\n3936\nNA\n0.9.26.15.59\nNA\n\n\nacep\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0054\nAtta cephalotes (leaf cutting ant)\nNA\n3936\n0.9.27.7.36.56\n0.9.27.7.36.56\nNA\n\n\nacer\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0057\nApis cerana (Asiatic honeybee)\nNA\n3936\n0.9.27.7.35.34\n0.9.27.7.35.34\nNA\n\n\nachc\nAnimals|Vertebrates|Birds\nCluster 1\n0103\nAquila chrysaetos chrysaetos (golden eagle)\nNA\n3936\nNA\n0.9.26.15.2.0\nNA\n\n\nache\nFungi|Ascomycetes|Eurotiomycetes\nFungui and Algae|MSA Cluster 3|MSA Fungui and Nematodes and Flatworms|MUN Cluster 3|MUN Fungui and Nematodes and Flatworms\n0106\nAspergillus chevalieri\nNA\n3936\n0.0.9.20.0.5.7.2\n0.0.9.20.0.5.7.2\n0.0.9.20.0.5.7.2\n\n\nachl\nAnimals|Vertebrates|Birds\nCluster 1\n0081\nAcanthisitta chloris (rifleman)\nNA\n3936\nNA\n0.9.26.15.1.1.0.0\nNA\n\n\nacoz\nAnimals|Arthropods|Insects\nMSA Cluster 2|MUN Cluster 2\n0255\nAnopheles coluzzii\nNA\n3936\n0.9.27.7.36.22\n0.9.27.7.36.22\nNA\n\n\n\n\n\n\n\n\ndim(Results)\n\n[1] 1132 3998\n\nnames(Results)[1]# organisms  kegg id  class representant of mDAG\n\n[1] \"Organism\"\n\nnames(Results)[2]# taxonomy separate by |\n\n[1] \"Categories\"\n\nnames(Results)[3]# groups \n\n[1] \"Groups\"\n\nnames(Results)[4]# mDAG_Id \n\n[1] \"mDAG_Id\"\n\nnames(Results)[5]# Full name representant\n\n[1] \"Full_Name\"\n\nnames(Results)[6:36]# columns 6 to 3998 \n\n [1] \"R00005(3.5.1.54)\"   \"R00009(1.11.1.6)\"   \"R00010(3.2.1.28)\"  \n [4] \"R00014(1.2.4.1)\"    \"R00014(4.1.1.1)\"    \"R00021(1.4.7.1)\"   \n [7] \"R00022(3.2.1.52)\"   \"R00024(4.1.1.39)\"   \"R00028(3.2.1.20)\"  \n[10] \"R00031(1.10.3.1)\"   \"R00032(1.13.11.63)\" \"R00036(4.2.1.24)\"  \n[13] \"R00045(1.10.3.1)\"   \"R00066(2.5.1.9)\"    \"R00068(1.10.3.3)\"  \n[16] \"R00073(1.14.99.1)\"  \"R00075(2.5.1.43)\"   \"R00078(1.16.3.1)\"  \n[19] \"R00084(2.5.1.61)\"   \"R00086(3.6.1.15)\"   \"R00086(3.6.1.5)\"   \n[22] \"R00087(3.6.1.9)\"    \"R00093(1.4.1.14)\"   \"R00095(1.6.5.4)\"   \n[25] \"R00100(1.6.2.2)\"    \"R00102(3.2.2.5)\"    \"R00102(3.2.2.6)\"   \n[28] \"R00103(3.6.1.22)\"   \"R00103(3.6.1.9)\"    \"R00104(2.7.1.23)\"  \n[31] \"R00111(1.14.13.39)\"\n\n# reactions name id with its enzyme.\n\n\nreactions=names(Results)[-c(1:5)]\nreverse_reactions=stringr::str_detect(reactions,\"rev\")\nreverse_reactions=table(reverse_reactions)\ndimnames(reverse_reactions)$reverse_reactions=\n  c(\"Non reverse reaction\",\"Reverse reaction\")\nreverse_reactions %&gt;% kable %&gt;%\n  kable_styling(\"striped\", full_width = F,position=\"left\")\n\n\n\n\nreverse_reactions\nFreq\n\n\n\n\nNon reverse reaction\n3399\n\n\nReverse reaction\n594"
  },
  {
    "objectID": "metabolic_graphs.html#metabolic-graphs-for-each-organism",
    "href": "metabolic_graphs.html#metabolic-graphs-for-each-organism",
    "title": "3  Metabolic Graphs",
    "section": "3.1 Metabolic graphs for each organism",
    "text": "3.1 Metabolic graphs for each organism\nRead the individual metabolic graphs generated for Homo sapiens (KEGG id: hsa) in the directory(Individuals/hsa)\n\nexperiment=\n  \"result_0a845f74-826e-3b46-aed9-e7ecf74db262/\"\npath_exp=paste0(\"data/\",experiment)\nfiles_hsa=dir(paste0(path_exp,\"Individuals/hsa\"))\nfiles_hsa\n\n [1] \"hsa_mDAG.graphml\"       \"hsa_mDAG.pdf\"           \"hsa_mDAG.svg\"          \n [4] \"hsa_mDAG_adj.csv\"       \"hsa_mDAG_biggerDAG.pdf\" \"hsa_mDAG_biggerDAG.svg\"\n [7] \"hsa_mDAG_nl.csv\"        \"hsa_mDAG_structure.csv\" \"hsa_R_adj.csv\"         \n[10] \"hsa_R_nl.csv\"           \"hsa_RC.graphml\"         \"hsa_RC.pdf\"            \n[13] \"hsa_RC.svg\"             \"hsa_summary.txt\"       \n\n\n\n\n\n\n\nfiles_Individual_hsa\nDescription\n\n\n\n\nhsa_mDAG.graphml\nm-DAG GraphML format\n\n\nhsa_mDAG.pdf\nm-DAG pdf graphic\n\n\nhsa_mDAG.svg\nm-DAG svg graphic\n\n\nhsa_mDAG_adj.csv\ncsv file with the adjacency matrix of the m-DAG\n\n\nhsa_mDAG_biggerDAG.pdf\npdf graphic with the biggest conected componet of the m-DAG\n\n\nhsa_mDAG_biggerDAG.svg\nsvg graphic with the biggest conected componet of the m-DAG\n\n\nhsa_mDAG_nl.csv\ncsv file with the node (MBBs) labels of the m-DAG\n\n\nhsa_mDAG_structure.csv\ncsv file with all connected components of the m-DAG\n\n\nhsa_R_adj.csv\ncsv file with the adjacency matrix of the reaction graph\n\n\nhsa_R_nl.csv\ncsv file with the node (reactions) labels of the reaction graph\n\n\nhsa_RC.graphml\nreaction graph GraphML format\n\n\nhsa_RC.pdf\nreaction graph pdf graphic\n\n\nhsa_RC.svg\nreaction graph svg graphic\n\n\nhsa_summary.txt\ntext summary file with the number of MBBs, reactions, etc. in the previous graphs"
  },
  {
    "objectID": "metabolic_graphs.html#pan-core-metabolic-graphs",
    "href": "metabolic_graphs.html#pan-core-metabolic-graphs",
    "title": "3  Metabolic Graphs",
    "section": "3.2 Pan & core metabolic graphs",
    "text": "3.2 Pan & core metabolic graphs\nPan and core metabolic graphs for every group were generated. For instance, one can read the pan and core metabolic graphs generated for the group Algae in the directory (Groups/Algae).\n\nfiles_Algae=dir(paste0(path_exp,\"Groups/Algae\"))\nfiles_Algae\n\n[1] \"core\" \"pan\" \n\n\nThe global core reaction graph, which is the core of all the organisms’ reaction graphs in this Eukaryotes test, is empty.\n\ngraph_core_RC=read.graph(\n  paste0(path_exp,\n         \"Global/core/core_RC.graphml\"),\n  format = \"graphml\")\nsummary(graph_core_RC)\n\nIGRAPH 3ceba4e D--- 0 0 -- \n+ attr: color (v/c), label (v/c), id (v/c)\n\n\nThe global core reaction graph has 0 vertex and 0 edges. It is an empty graph.\nThe core reaction graph for the Algae group is:\n\nknitr::include_graphics(\n  paste0(path_exp,\"Groups/MSA_Cluster_3/core/MSA_Cluster_3_core_RC.pdf\"))\n\n\n\n\nAlgae core reaction graph\n\n\n\n\nThe global core m-DAG, i.e., the core of all organisms in this example is empty.\n\ngraph_core_mDAG=read.graph(\n  paste0(path_exp,\"Global/core/core_mDAG.graphml\"),\n  format = \"graphml\")\nsummary(graph_core_mDAG)\n\nIGRAPH 3cf2292 D--- 0 0 -- \n+ attr: color (v/c), label (v/c), id (v/c)\n\n\nThe global core m-DAG has 0 vertex and 0 edges. It is an empty graph.\nThe core metabolic DAG for the Algae group is:\n\nknitr::include_graphics(paste0(path_exp,                              \"Groups/Algae/core/Algae_core_mDAG.pdf\"))\n\n\n\n\nCore m-DAG for Algae\n\n\n\n\nThe global pan reaction graph for the Animals Kingdom is:\n\ngraph_pan_RC=read.graph(\n  paste0(path_exp,\n         \"TaxonomyLevels/Kingdom/Animals/pan/Animals_pan_RC.graphml\"),\n  format = \"graphml\")\nsummary(graph_pan_RC)\n\nIGRAPH 3d04e34 D--- 4556 5798 -- \n+ attr: color (v/c), label (v/c), id (v/c), id (e/c)\n\n\nThis pan reaction graph has 4556 nodes and 5798 edges."
  },
  {
    "objectID": "metabolic_graphs.html#graphs-topology",
    "href": "metabolic_graphs.html#graphs-topology",
    "title": "3  Metabolic Graphs",
    "section": "3.3 Graph’s topology",
    "text": "3.3 Graph’s topology\nFrom the GraphML files, one can extract topological information. Some examples are as follows.\nThe diagram below illustrates the distribution of node degrees for an m-DAG.\n\ngraph_mDAG=read.graph(\n  paste0(path_exp,\n         \"Individuals/hsa/hsa_mDAG.graphml\"),\n  format= \"graphml\")\nsummary(graph_mDAG)\n\nIGRAPH 3d08c25 D--- 1026 1086 -- \n+ attr: color (v/c), label (v/c), id (v/c), id (e/c)\n\nbarplot(table(igraph::degree(graph_mDAG,mode=\"all\")),\n        ylim=c(0,350),col=\"blue\",\n        main=\"Frequency of Node Degrees\",\n        ylab=\"Frequency\",xlab=\"Degree\")\n\n\n\n\nThe connected components of every graph as well as the size of every connected component can be obtained as:\n\ncompo=components(graph_mDAG,mode = \"weak\")\nstr(compo)\n\nList of 3\n $ membership: num [1:1026] 1 1 1 1 1 1 1 1 1 1 ...\n $ csize     : num [1:167] 589 1 1 1 1 1 4 3 4 3 ...\n $ no        : int 167\n\ncompo$csize\n\n  [1] 589   1   1   1   1   1   4   3   4   3   2   3   3   1   1   1   2   6\n [19]   3   1   3   6   1   1   1   1   1   3   1   6   2   1   1   1   2   1\n [37]   1  14   1  16   1   6   2   2   4   1   1   1   1   1   1   1   1   1\n [55]  13   1   1   1   1   2   6   5   5   2   2  10   1   1   1   2   2   1\n [73]   1   1  62   6   2   1   2   1   1   1   2   1   2  14   3   1   1   1\n [91]   1   1   1   1   1   1   3   6   1   3   1   3   2   1   1   1   2   2\n[109]   3   1   1   2   5   1   1   2   3   2   1   1   2   3   4   1   1   2\n[127]   1   1   2   1   1   1   1   1   3   1   2   2   1   6   1   1   1   2\n[145]   1   1   1   1   1   2   7   1  15   3   1   1   1   1   2   1   3   1\n[163]   1   1   1   1   2\n\nk=which.max(compo$csize==max(compo$csize))\nk\n\n[1] 1\n\ntable(compo$membership)\n\n\n  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20 \n589   1   1   1   1   1   4   3   4   3   2   3   3   1   1   1   2   6   3   1 \n 21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40 \n  3   6   1   1   1   1   1   3   1   6   2   1   1   1   2   1   1  14   1  16 \n 41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 \n  1   6   2   2   4   1   1   1   1   1   1   1   1   1  13   1   1   1   1   2 \n 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 \n  6   5   5   2   2  10   1   1   1   2   2   1   1   1  62   6   2   1   2   1 \n 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 \n  1   1   2   1   2  14   3   1   1   1   1   1   1   1   1   1   3   6   1   3 \n101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 \n  1   3   2   1   1   1   2   2   3   1   1   2   5   1   1   2   3   2   1   1 \n121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 \n  2   3   4   1   1   2   1   1   2   1   1   1   1   1   3   1   2   2   1   6 \n141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 \n  1   1   1   2   1   1   1   1   1   2   7   1  15   3   1   1   1   1   2   1 \n161 162 163 164 165 166 167 \n  3   1   1   1   1   1   2 \n\nvertex=which(compo$membership==k)\nlength(vertex)\n\n[1] 589\n\nBig_Component=induced_subgraph(graph_mDAG, vids=vertex)\nigraph::vcount(Big_Component)\n\n[1] 589\n\nigraph::ecount(Big_Component)\n\n[1] 774\n\n\nAnd the plot of the bigger component of the m-DAG in Homo sapiens is:\n\nknitr::include_graphics(paste0(path_exp,\n                               \"Individuals/hsa/hsa_mDAG_biggerDAG.pdf\"))\n\n\n\n\n\n\n\n\n\n#path_exp=\"data/result_bb261b6e-95c6-3e39-b82b-b68eea80e30b/data/\" \nlist_names=dir(paste0(path_exp,\"Individuals/\"))\nlist_names= list_names[-1] # filter 0000_RefPw\nlength(list_names) \n\n[1] 884\n\ngraphs_list=paste0(path_exp,\"Individuals/\", list_names,\"/\",list_names, \"_MDAG.graphml\")\n\n\nknitr::include_graphics(\n  paste0(path_exp,\"Individuals/cang/cang_RC.pdf\"))"
  },
  {
    "objectID": "metabolic_graphs.html#graph-statistics",
    "href": "metabolic_graphs.html#graph-statistics",
    "title": "3  Metabolic Graphs",
    "section": "3.4 Graph statistics",
    "text": "3.4 Graph statistics\nThe number of connected component in each generated m-DAG with their frequency in the entire set of m-DAGs, can be obtained as follows:\n\nread_mDAG=function(x) {DAG=read.graph(file=x,\n                                      format=\"graphml\")\nreturn(DAG)}\nmDAG_componets=function(x) {\n  sort(components(x,mode = \"weak\")$csize,\n       decreasing=TRUE)\n}\n\ncompo_list=lapply(graphs_list,\n                  FUN=function(x) {\n                    gg=read_mDAG(x)\n                    aux=list(\n                      mDAG_componets=mDAG_componets(gg),\n                      degree_count=igraph::degree(gg,mode=\"total\"))\n                    return(aux)}\n)\n\nnames(compo_list)=list_names\nn=max(sapply(compo_list,FUN=function(x) {length(x[[1]])}))\nn\n\n[1] 234\n\nsize_compo_list=lapply(compo_list,FUN=function(x) {\n  return(c(x[[1]],rep(NA,n-length(x[[1]]))))})\n\naux=do.call(bind_cols,size_compo_list)\nweak_componets_size=pivot_longer(aux,aaf:zvi,names_to=\"Organism\",\n                                 values_to=\"csize\") %&gt;%\n  arrange(Organism,-csize)\nweak_componets_size$index=rep(1:n,times=dim(aux)[2])\nweak_componets_size=weak_componets_size %&gt;%\n  left_join(meta_taxo,by=\"Organism\")\n\n\nOrganism=names(compo_list)\nbig_MBB=function(org){\n  org=\"hsa\"\n  x=Results %&gt;% filter(Organism==org)\n  x=as.character(x[1,5:dim(Results)[2]])\n  x=x[x!=\"NA\"]\n  tt=sort(table(x),decreasing=TRUE)\n  return(tt)\n}\nbig_MBB_list= lapply(Organism,FUN=function(x) big_MBB(x))\nnMBB=max(sapply(big_MBB_list,FUN=function(x) length(x)))\nnMBB\n\n[1] 1028\n\nbig_MBB_list=lapply(big_MBB_list,\n                    FUN=function(x){\n                      x=c(x,rep(NA,nMBB-length(x)))\n                      return(x)}\n)\nnames(big_MBB_list)=Organism\nbig_MBB_list=do.call(bind_cols,big_MBB_list)\n\nkMBB=nrow(big_MBB_list)\nindex=rep(1:kMBB,times=length(Organism))\n\nbig_MBB_list2=pivot_longer(big_MBB_list,\n                           cols=names(big_MBB_list),\n                           values_to = \"MBBsize\",\n                           names_to = \"Organism\") %&gt;% \n  arrange(Organism,-MBBsize) %&gt;%  \n  mutate(index=index) %&gt;% \n  left_join(meta_taxo,by=\"Organism\")\n\nWe can visualize the sizes of the weak components for each m-DAG, using colors to represent the different Kingdoms, also we scale the results by a log-log plot:\n\nCOLOR_KINGDOM=c(\"red\",\"yellow\",\"green\",\"black\")\ncolors_kingdom=weak_componets_size%&gt;% select(Organism,Kingdom) %&gt;% distinct()\nnames(COLOR_KINGDOM)=sort(unique(colors_kingdom$Kingdom))\n\np1&lt;- ggplot(data=weak_componets_size) + \n  geom_line(mapping=aes(x=index,\n                        y=csize,group = Organism,\n                        color=Kingdom),\n            na.rm=TRUE) + \n  scale_x_continuous(trans=\"identity\") + \n  scale_y_continuous(trans=\"identity\") +\n  ylim(0,640)+\n  ggtitle(\"Plot of weak components size decreasing order.\")+\n  ylab(\"Weak components size\") + xlab(\"Order\")+\n  scale_color_manual(values =COLOR_KINGDOM[colors_kingdom$Kingdom])\n\np2&lt;- ggplot(data=weak_componets_size) + \n  geom_line(mapping=aes(x=index,\n                        y=csize,group = Organism,\n                        color=Kingdom),\n            na.rm=TRUE) + \n  scale_y_continuous(trans='log10') + \n  scale_x_continuous(trans='log10') +\n  scale_color_manual(values =COLOR_KINGDOM[colors_kingdom$Kingdom])+\n  ggtitle(\"Plot log10-log10 of size  weak components decreasing order.\") +\n  ylab(\"Log10 weak component size\") + xlab(\"Log10 order\")\np1\n\n\n\np2\n\n\n\n\nA table with the frequencies of the weak connected components sizes, displayed by Kingdom, can be obtained as follows:\n\naux=table(weak_componets_size$csize,weak_componets_size$Kingdom)\ntable_wcc_size=tibble(Order=1:dim(aux)[1],\n                      Wcc_size=as.integer(unlist(dimnames(aux)[1])),\n                      Animals=aux[,1],\n                      Fungi=aux[,2],\n                      Plants=aux[,3],\n                      Protists=aux[,4])\nknitr::kable(table_wcc_size)\n\n\n\n\nOrder\nWcc_size\nAnimals\nFungi\nPlants\nProtists\n\n\n\n\n1\n1\n57634\n15311\n15024\n4462\n\n\n2\n2\n13528\n2118\n2908\n932\n\n\n3\n3\n7018\n1070\n911\n317\n\n\n4\n4\n2459\n313\n292\n96\n\n\n5\n5\n1962\n215\n389\n81\n\n\n6\n6\n1778\n154\n323\n49\n\n\n7\n7\n633\n46\n111\n15\n\n\n8\n8\n278\n57\n110\n7\n\n\n9\n9\n174\n76\n151\n22\n\n\n10\n10\n671\n6\n124\n7\n\n\n11\n11\n411\n14\n6\n20\n\n\n12\n12\n109\n12\n4\n5\n\n\n13\n13\n369\n92\n132\n7\n\n\n14\n14\n774\n9\n2\n2\n\n\n15\n15\n234\n1\n5\n6\n\n\n16\n16\n79\n6\n1\n1\n\n\n17\n17\n55\n8\n1\n1\n\n\n18\n18\n4\n5\n9\n5\n\n\n19\n19\n5\n3\n87\n4\n\n\n20\n20\n9\n3\n0\n1\n\n\n21\n21\n13\n2\n12\n1\n\n\n22\n22\n7\n2\n2\n0\n\n\n23\n23\n21\n1\n3\n0\n\n\n24\n24\n19\n1\n3\n1\n\n\n25\n25\n20\n0\n2\n1\n\n\n26\n26\n12\n0\n39\n0\n\n\n27\n27\n1\n1\n11\n0\n\n\n28\n28\n5\n2\n77\n0\n\n\n29\n29\n40\n1\n0\n1\n\n\n30\n30\n0\n1\n1\n0\n\n\n31\n31\n72\n8\n1\n0\n\n\n32\n32\n11\n7\n1\n0\n\n\n33\n33\n1\n0\n0\n2\n\n\n34\n34\n6\n0\n0\n0\n\n\n35\n35\n2\n0\n0\n0\n\n\n36\n36\n3\n0\n0\n0\n\n\n37\n37\n5\n1\n2\n0\n\n\n38\n38\n0\n0\n0\n1\n\n\n39\n39\n5\n0\n0\n0\n\n\n40\n40\n5\n1\n0\n0\n\n\n41\n41\n4\n0\n0\n0\n\n\n42\n42\n1\n0\n0\n0\n\n\n43\n43\n2\n0\n0\n1\n\n\n44\n44\n6\n0\n0\n0\n\n\n45\n45\n1\n0\n0\n0\n\n\n46\n46\n5\n0\n0\n0\n\n\n47\n47\n9\n0\n0\n0\n\n\n48\n48\n1\n0\n0\n0\n\n\n49\n49\n1\n1\n0\n0\n\n\n50\n50\n1\n0\n0\n0\n\n\n51\n51\n4\n0\n0\n0\n\n\n52\n53\n50\n1\n0\n1\n\n\n53\n54\n6\n0\n0\n0\n\n\n54\n55\n1\n0\n0\n0\n\n\n55\n56\n8\n0\n0\n0\n\n\n56\n57\n2\n0\n0\n0\n\n\n57\n58\n12\n1\n0\n0\n\n\n58\n59\n6\n0\n0\n0\n\n\n59\n60\n30\n1\n0\n0\n\n\n60\n61\n5\n0\n0\n0\n\n\n61\n62\n15\n0\n0\n0\n\n\n62\n63\n4\n0\n0\n0\n\n\n63\n64\n2\n0\n0\n0\n\n\n64\n65\n34\n0\n0\n0\n\n\n65\n66\n6\n0\n0\n0\n\n\n66\n67\n1\n0\n0\n0\n\n\n67\n69\n1\n0\n0\n0\n\n\n68\n70\n2\n0\n0\n1\n\n\n69\n71\n1\n0\n0\n0\n\n\n70\n72\n1\n0\n0\n0\n\n\n71\n73\n6\n0\n0\n0\n\n\n72\n77\n2\n0\n0\n1\n\n\n73\n78\n1\n0\n0\n1\n\n\n74\n83\n0\n0\n0\n2\n\n\n75\n84\n1\n0\n0\n0\n\n\n76\n87\n1\n0\n0\n0\n\n\n77\n88\n1\n0\n0\n1\n\n\n78\n90\n2\n0\n0\n1\n\n\n79\n91\n1\n0\n0\n0\n\n\n80\n94\n4\n0\n0\n1\n\n\n81\n95\n1\n0\n0\n0\n\n\n82\n96\n1\n0\n0\n1\n\n\n83\n97\n0\n0\n0\n1\n\n\n84\n99\n1\n0\n0\n1\n\n\n85\n100\n2\n0\n0\n0\n\n\n86\n101\n1\n0\n0\n0\n\n\n87\n102\n0\n0\n0\n1\n\n\n88\n103\n3\n0\n0\n1\n\n\n89\n104\n0\n0\n0\n2\n\n\n90\n105\n0\n0\n0\n1\n\n\n91\n107\n0\n0\n0\n1\n\n\n92\n108\n1\n0\n0\n2\n\n\n93\n110\n2\n0\n0\n0\n\n\n94\n111\n1\n0\n0\n0\n\n\n95\n112\n0\n1\n0\n0\n\n\n96\n113\n2\n0\n0\n0\n\n\n97\n114\n1\n0\n0\n1\n\n\n98\n116\n1\n0\n0\n0\n\n\n99\n117\n3\n0\n0\n0\n\n\n100\n120\n1\n0\n0\n0\n\n\n101\n121\n2\n0\n0\n0\n\n\n102\n125\n1\n0\n0\n0\n\n\n103\n127\n1\n0\n0\n1\n\n\n104\n128\n0\n0\n0\n2\n\n\n105\n153\n0\n1\n0\n0\n\n\n106\n166\n0\n0\n0\n1\n\n\n107\n175\n0\n0\n0\n2\n\n\n108\n181\n0\n0\n0\n1\n\n\n109\n183\n0\n0\n0\n2\n\n\n110\n184\n1\n0\n0\n0\n\n\n111\n187\n0\n0\n0\n1\n\n\n112\n193\n1\n0\n0\n1\n\n\n113\n195\n0\n0\n0\n1\n\n\n114\n196\n0\n0\n0\n1\n\n\n115\n198\n1\n0\n0\n0\n\n\n116\n203\n0\n0\n0\n1\n\n\n117\n205\n0\n0\n0\n1\n\n\n118\n210\n2\n0\n0\n0\n\n\n119\n219\n1\n0\n0\n1\n\n\n120\n220\n1\n0\n0\n0\n\n\n121\n229\n1\n0\n0\n0\n\n\n122\n231\n0\n0\n0\n1\n\n\n123\n232\n1\n0\n0\n0\n\n\n124\n233\n0\n1\n0\n0\n\n\n125\n235\n1\n0\n0\n0\n\n\n126\n238\n3\n0\n0\n0\n\n\n127\n243\n1\n0\n0\n0\n\n\n128\n245\n0\n1\n0\n0\n\n\n129\n246\n1\n1\n0\n0\n\n\n130\n248\n0\n1\n0\n0\n\n\n131\n249\n0\n2\n0\n0\n\n\n132\n250\n0\n2\n0\n0\n\n\n133\n251\n0\n1\n0\n0\n\n\n134\n252\n1\n2\n0\n0\n\n\n135\n253\n1\n0\n0\n0\n\n\n136\n254\n0\n1\n0\n0\n\n\n137\n255\n2\n0\n0\n0\n\n\n138\n256\n2\n1\n0\n0\n\n\n139\n257\n4\n0\n0\n0\n\n\n140\n258\n1\n1\n0\n0\n\n\n141\n259\n1\n0\n0\n0\n\n\n142\n260\n2\n1\n0\n1\n\n\n143\n261\n2\n1\n0\n0\n\n\n144\n262\n2\n0\n0\n0\n\n\n145\n263\n4\n1\n0\n1\n\n\n146\n264\n4\n0\n0\n0\n\n\n147\n265\n3\n4\n0\n2\n\n\n148\n266\n2\n1\n0\n0\n\n\n149\n267\n2\n1\n0\n0\n\n\n150\n268\n2\n3\n0\n1\n\n\n151\n269\n3\n1\n0\n0\n\n\n152\n270\n3\n0\n1\n0\n\n\n153\n271\n1\n1\n0\n0\n\n\n154\n272\n2\n2\n0\n0\n\n\n155\n273\n4\n3\n0\n1\n\n\n156\n274\n2\n1\n0\n0\n\n\n157\n275\n4\n2\n0\n0\n\n\n158\n276\n0\n2\n0\n0\n\n\n159\n277\n4\n4\n0\n0\n\n\n160\n278\n3\n3\n0\n1\n\n\n161\n279\n5\n0\n0\n1\n\n\n162\n280\n1\n0\n0\n0\n\n\n163\n281\n3\n4\n0\n0\n\n\n164\n282\n4\n1\n0\n0\n\n\n165\n283\n5\n1\n0\n0\n\n\n166\n284\n4\n1\n0\n0\n\n\n167\n285\n5\n1\n0\n0\n\n\n168\n286\n4\n2\n0\n1\n\n\n169\n287\n1\n0\n0\n0\n\n\n170\n288\n2\n3\n0\n0\n\n\n171\n289\n1\n0\n0\n0\n\n\n172\n290\n3\n0\n0\n0\n\n\n173\n291\n1\n1\n0\n0\n\n\n174\n292\n1\n3\n0\n1\n\n\n175\n293\n5\n1\n0\n0\n\n\n176\n294\n6\n0\n0\n0\n\n\n177\n295\n1\n2\n0\n0\n\n\n178\n296\n5\n1\n0\n0\n\n\n179\n297\n4\n1\n0\n0\n\n\n180\n298\n2\n1\n0\n0\n\n\n181\n299\n2\n0\n1\n1\n\n\n182\n300\n2\n0\n0\n0\n\n\n183\n301\n4\n2\n0\n0\n\n\n184\n302\n1\n0\n0\n1\n\n\n185\n303\n3\n0\n0\n0\n\n\n186\n304\n3\n0\n0\n0\n\n\n187\n305\n3\n0\n0\n0\n\n\n188\n306\n2\n1\n0\n0\n\n\n189\n307\n4\n1\n0\n0\n\n\n190\n308\n1\n0\n0\n0\n\n\n191\n310\n1\n0\n0\n0\n\n\n192\n311\n1\n0\n1\n0\n\n\n193\n313\n2\n2\n0\n0\n\n\n194\n315\n1\n0\n0\n0\n\n\n195\n316\n1\n0\n0\n0\n\n\n196\n317\n1\n0\n1\n0\n\n\n197\n318\n0\n2\n0\n0\n\n\n198\n319\n1\n0\n0\n0\n\n\n199\n320\n3\n1\n1\n0\n\n\n200\n321\n1\n0\n0\n0\n\n\n201\n322\n3\n0\n0\n0\n\n\n202\n323\n2\n0\n0\n0\n\n\n203\n325\n1\n0\n0\n0\n\n\n204\n327\n2\n1\n0\n0\n\n\n205\n328\n5\n1\n1\n0\n\n\n206\n330\n0\n1\n0\n0\n\n\n207\n332\n1\n0\n0\n0\n\n\n208\n333\n1\n1\n1\n1\n\n\n209\n335\n1\n0\n0\n0\n\n\n210\n338\n1\n0\n0\n0\n\n\n211\n339\n0\n0\n1\n1\n\n\n212\n340\n1\n1\n0\n0\n\n\n213\n341\n1\n0\n0\n0\n\n\n214\n342\n1\n0\n0\n1\n\n\n215\n343\n2\n1\n0\n0\n\n\n216\n344\n0\n0\n1\n0\n\n\n217\n345\n2\n0\n0\n0\n\n\n218\n346\n1\n0\n0\n0\n\n\n219\n347\n2\n0\n0\n0\n\n\n220\n349\n2\n0\n0\n0\n\n\n221\n350\n1\n0\n0\n0\n\n\n222\n351\n1\n0\n0\n0\n\n\n223\n352\n3\n0\n0\n0\n\n\n224\n353\n1\n0\n0\n0\n\n\n225\n354\n1\n0\n0\n0\n\n\n226\n355\n2\n0\n0\n0\n\n\n227\n356\n1\n1\n0\n0\n\n\n228\n357\n1\n2\n0\n0\n\n\n229\n358\n2\n1\n0\n0\n\n\n230\n359\n0\n0\n1\n0\n\n\n231\n360\n1\n0\n1\n0\n\n\n232\n361\n1\n3\n0\n0\n\n\n233\n362\n1\n2\n0\n0\n\n\n234\n363\n2\n3\n0\n0\n\n\n235\n365\n2\n1\n0\n0\n\n\n236\n366\n1\n0\n0\n0\n\n\n237\n367\n1\n0\n0\n0\n\n\n238\n368\n2\n1\n0\n0\n\n\n239\n369\n3\n1\n0\n0\n\n\n240\n370\n0\n2\n0\n0\n\n\n241\n371\n0\n2\n0\n0\n\n\n242\n372\n1\n0\n0\n0\n\n\n243\n373\n2\n2\n0\n0\n\n\n244\n374\n3\n1\n0\n0\n\n\n245\n375\n2\n1\n0\n0\n\n\n246\n376\n0\n1\n0\n0\n\n\n247\n377\n0\n1\n0\n0\n\n\n248\n378\n2\n0\n0\n0\n\n\n249\n380\n0\n3\n0\n0\n\n\n250\n381\n2\n1\n0\n0\n\n\n251\n382\n2\n1\n0\n0\n\n\n252\n383\n3\n1\n1\n0\n\n\n253\n384\n0\n1\n0\n0\n\n\n254\n385\n0\n1\n0\n0\n\n\n255\n387\n2\n2\n0\n0\n\n\n256\n388\n1\n2\n0\n0\n\n\n257\n389\n1\n0\n0\n0\n\n\n258\n391\n2\n0\n0\n0\n\n\n259\n392\n0\n1\n0\n0\n\n\n260\n393\n1\n1\n0\n0\n\n\n261\n394\n3\n0\n0\n0\n\n\n262\n396\n1\n0\n0\n0\n\n\n263\n397\n0\n2\n0\n0\n\n\n264\n398\n2\n0\n0\n0\n\n\n265\n399\n1\n1\n0\n0\n\n\n266\n400\n0\n0\n1\n0\n\n\n267\n401\n1\n1\n0\n0\n\n\n268\n402\n0\n1\n0\n0\n\n\n269\n404\n1\n1\n0\n0\n\n\n270\n405\n3\n1\n0\n0\n\n\n271\n406\n0\n1\n0\n0\n\n\n272\n407\n0\n2\n0\n0\n\n\n273\n408\n1\n1\n1\n0\n\n\n274\n409\n2\n0\n0\n0\n\n\n275\n411\n3\n0\n0\n0\n\n\n276\n412\n1\n0\n0\n0\n\n\n277\n413\n2\n1\n0\n0\n\n\n278\n415\n1\n0\n0\n0\n\n\n279\n416\n2\n0\n0\n0\n\n\n280\n417\n0\n1\n0\n0\n\n\n281\n418\n0\n1\n0\n0\n\n\n282\n419\n0\n1\n0\n0\n\n\n283\n420\n0\n1\n0\n0\n\n\n284\n421\n1\n2\n0\n0\n\n\n285\n423\n0\n2\n0\n0\n\n\n286\n424\n0\n1\n0\n0\n\n\n287\n426\n2\n0\n0\n0\n\n\n288\n428\n1\n0\n0\n0\n\n\n289\n431\n0\n1\n0\n0\n\n\n290\n432\n1\n0\n0\n0\n\n\n291\n433\n3\n0\n0\n0\n\n\n292\n435\n1\n0\n0\n0\n\n\n293\n438\n0\n1\n0\n0\n\n\n294\n439\n0\n1\n0\n0\n\n\n295\n443\n1\n0\n0\n0\n\n\n296\n444\n1\n0\n0\n0\n\n\n297\n445\n2\n1\n0\n0\n\n\n298\n446\n2\n0\n0\n0\n\n\n299\n447\n1\n0\n0\n0\n\n\n300\n452\n1\n0\n0\n0\n\n\n301\n453\n1\n0\n0\n0\n\n\n302\n455\n1\n0\n0\n0\n\n\n303\n459\n1\n0\n0\n0\n\n\n304\n462\n1\n0\n0\n0\n\n\n305\n463\n2\n0\n0\n0\n\n\n306\n465\n1\n0\n0\n0\n\n\n307\n468\n1\n0\n0\n0\n\n\n308\n470\n1\n0\n0\n0\n\n\n309\n471\n0\n0\n1\n0\n\n\n310\n473\n0\n0\n1\n0\n\n\n311\n475\n2\n0\n0\n0\n\n\n312\n480\n1\n0\n0\n0\n\n\n313\n481\n1\n0\n0\n0\n\n\n314\n482\n1\n0\n0\n0\n\n\n315\n483\n1\n0\n0\n0\n\n\n316\n485\n0\n0\n1\n0\n\n\n317\n487\n1\n0\n0\n0\n\n\n318\n491\n3\n0\n0\n0\n\n\n319\n492\n1\n0\n0\n0\n\n\n320\n493\n3\n0\n0\n0\n\n\n321\n496\n2\n0\n0\n0\n\n\n322\n497\n3\n0\n0\n0\n\n\n323\n500\n0\n0\n1\n0\n\n\n324\n501\n1\n0\n0\n0\n\n\n325\n502\n5\n0\n0\n0\n\n\n326\n503\n1\n0\n0\n0\n\n\n327\n504\n1\n0\n1\n0\n\n\n328\n507\n2\n0\n0\n0\n\n\n329\n508\n2\n0\n0\n0\n\n\n330\n509\n1\n0\n0\n0\n\n\n331\n510\n1\n0\n0\n0\n\n\n332\n511\n2\n0\n0\n0\n\n\n333\n512\n5\n0\n0\n0\n\n\n334\n513\n2\n0\n0\n0\n\n\n335\n514\n0\n0\n2\n0\n\n\n336\n515\n4\n0\n5\n0\n\n\n337\n516\n4\n0\n0\n0\n\n\n338\n517\n5\n0\n1\n0\n\n\n339\n518\n1\n0\n0\n0\n\n\n340\n519\n3\n0\n1\n0\n\n\n341\n520\n2\n0\n0\n0\n\n\n342\n521\n2\n0\n1\n0\n\n\n343\n523\n5\n0\n1\n0\n\n\n344\n524\n3\n0\n1\n0\n\n\n345\n525\n2\n0\n1\n0\n\n\n346\n526\n0\n0\n1\n0\n\n\n347\n527\n2\n0\n0\n0\n\n\n348\n528\n2\n0\n4\n0\n\n\n349\n529\n7\n0\n0\n0\n\n\n350\n530\n1\n0\n2\n0\n\n\n351\n531\n2\n0\n1\n0\n\n\n352\n532\n2\n0\n2\n0\n\n\n353\n533\n2\n0\n2\n0\n\n\n354\n534\n2\n0\n0\n0\n\n\n355\n535\n2\n0\n2\n0\n\n\n356\n536\n2\n0\n0\n0\n\n\n357\n537\n1\n0\n0\n0\n\n\n358\n538\n3\n0\n0\n0\n\n\n359\n539\n1\n0\n1\n0\n\n\n360\n540\n0\n0\n4\n0\n\n\n361\n541\n2\n0\n0\n0\n\n\n362\n542\n0\n0\n2\n0\n\n\n363\n544\n0\n0\n3\n0\n\n\n364\n545\n0\n0\n1\n0\n\n\n365\n546\n1\n0\n1\n0\n\n\n366\n547\n0\n0\n1\n0\n\n\n367\n548\n1\n0\n1\n0\n\n\n368\n549\n1\n0\n2\n0\n\n\n369\n550\n0\n0\n6\n0\n\n\n370\n551\n4\n0\n2\n0\n\n\n371\n553\n1\n0\n1\n0\n\n\n372\n554\n0\n0\n3\n0\n\n\n373\n555\n2\n0\n9\n0\n\n\n374\n556\n0\n0\n1\n0\n\n\n375\n557\n2\n0\n4\n0\n\n\n376\n558\n0\n0\n2\n0\n\n\n377\n559\n1\n0\n3\n0\n\n\n378\n560\n1\n0\n4\n0\n\n\n379\n561\n0\n0\n4\n0\n\n\n380\n562\n3\n0\n2\n0\n\n\n381\n563\n3\n0\n0\n0\n\n\n382\n564\n1\n0\n2\n0\n\n\n383\n565\n1\n0\n0\n0\n\n\n384\n566\n0\n0\n1\n0\n\n\n385\n567\n3\n0\n3\n0\n\n\n386\n568\n3\n0\n0\n0\n\n\n387\n569\n5\n0\n1\n0\n\n\n388\n570\n4\n0\n2\n0\n\n\n389\n571\n2\n0\n2\n0\n\n\n390\n572\n1\n0\n2\n0\n\n\n391\n573\n2\n0\n2\n0\n\n\n392\n574\n2\n0\n4\n0\n\n\n393\n575\n5\n0\n4\n0\n\n\n394\n576\n6\n0\n1\n0\n\n\n395\n577\n7\n0\n4\n0\n\n\n396\n578\n7\n0\n0\n0\n\n\n397\n579\n2\n0\n0\n0\n\n\n398\n580\n3\n0\n0\n0\n\n\n399\n581\n3\n0\n3\n0\n\n\n400\n582\n7\n0\n2\n0\n\n\n401\n583\n2\n0\n0\n0\n\n\n402\n584\n3\n0\n1\n0\n\n\n403\n585\n4\n0\n0\n0\n\n\n404\n586\n3\n0\n0\n0\n\n\n405\n587\n1\n0\n1\n0\n\n\n406\n588\n1\n0\n0\n0\n\n\n407\n589\n1\n0\n0\n0\n\n\n408\n590\n1\n0\n0\n0\n\n\n409\n591\n5\n0\n0\n0\n\n\n410\n592\n2\n0\n0\n0\n\n\n411\n594\n3\n0\n0\n0\n\n\n412\n595\n2\n0\n0\n0\n\n\n413\n597\n0\n0\n1\n0\n\n\n414\n598\n2\n0\n0\n0\n\n\n415\n601\n2\n0\n0\n0\n\n\n416\n602\n1\n0\n0\n0\n\n\n417\n603\n1\n0\n0\n0\n\n\n418\n604\n2\n0\n0\n0\n\n\n419\n605\n1\n0\n0\n0\n\n\n420\n611\n1\n0\n0\n0\n\n\n421\n618\n1\n0\n0\n0\n\n\n422\n640\n1\n0\n0\n0\n\n\n\n\n\n\n\nA table with the frequencies of the MBBs sizes displayed by Kingdom can be obtained as follows:\n\naux=table(big_MBB_list2$MBBsize,big_MBB_list2$Kingdom)\ntable_MBB_size=tibble(Order=1:dim(aux)[1],\n                      MBB_size=as.integer(unlist(dimnames(aux)[1])),\n                      Animals=aux[,1],\n                      Fungi=aux[,2],\n                      Plants=aux[,3],\n                      Protists=aux[,4])\nknitr::kable(table_MBB_size)\n\n\n\n\nOrder\nMBB_size\nAnimals\nFungi\nPlants\nProtists\n\n\n\n\n1\n1\n511995\n147378\n133023\n53592\n\n\n2\n2\n18725\n5390\n4865\n1960\n\n\n3\n3\n3745\n1078\n973\n392\n\n\n4\n4\n5885\n1694\n1529\n616\n\n\n5\n5\n535\n154\n139\n56\n\n\n6\n6\n3210\n924\n834\n336\n\n\n7\n7\n1605\n462\n417\n168\n\n\n8\n8\n535\n154\n139\n56\n\n\n9\n9\n535\n154\n139\n56\n\n\n10\n10\n535\n154\n139\n56\n\n\n11\n12\n1070\n308\n278\n112\n\n\n12\n18\n535\n154\n139\n56\n\n\n13\n30\n535\n154\n139\n56\n\n\n14\n979\n535\n154\n139\n56"
  },
  {
    "objectID": "m_DAGs_similarity.html#msa-munkres-similarities",
    "href": "m_DAGs_similarity.html#msa-munkres-similarities",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.1 MSA & Munkres similarities",
    "text": "4.1 MSA & Munkres similarities\nIn this section, we will present the similarities between m-DAGs considering the two similarity meausures described in the paper. Namely, the MSA and Munkres similarities.\nThe experimental data set consists of 1132 Eukaryotes from the animal, plant, fungus, and protists kingdoms.\n\n\n\n\n\nKingdom\nAbs. Freq.\n\n\n\n\nAnimals\n535\n\n\nFungi\n154\n\n\nPlants\n139\n\n\nProtists\n56\n\n\n\n\n\n\n\nThe similarity values are provided in the following files:\n\nlist_Sim=dir(path_exp,pattern=\"^Similarities\")\nlist_Sim\n\n[1] \"Similarities_MBB_MSAMethod.csv\"      \"Similarities_MBB_MunkresMethod.csv\" \n[3] \"Similarities_mDAG_MSAMethod.csv\"     \"Similarities_mDAG_MunkresMethod.csv\"\n\n\nLoad the m-DAGs similarities\n\nn=884# no synthetic mDGAs\nSim_MSA_mDAG=read_csv(paste0(path_exp,\n                             \"Similarities_mDAG_MSAMethod.csv\"))\nSim_MSA_mDAG=as.matrix(Sim_MSA_mDAG[,-1])\nrownames(Sim_MSA_mDAG)=colnames(Sim_MSA_mDAG)\nSim_MSA_mDAG=Sim_MSA_mDAG[meta_taxo$mDAG_Id[1:n],\n                          meta_taxo$mDAG_Id[1:n]]\n\n\nSim_Mun_mDAG=read_csv(paste0(path_exp,\"Similarities_mDAG_MunkresMethod.csv\"))\nSim_Mun_mDAG=as.matrix(Sim_Mun_mDAG[,-1])\nrownames(Sim_Mun_mDAG)=colnames(Sim_Mun_mDAG)\nSim_Mun_mDAG=Sim_Mun_mDAG[meta_taxo$mDAG_Id[1:n],meta_taxo$mDAG_Id[1:n]]"
  },
  {
    "objectID": "m_DAGs_similarity.html#heatmaps",
    "href": "m_DAGs_similarity.html#heatmaps",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.2 Heatmaps",
    "text": "4.2 Heatmaps\nHere, we provide examples of heatmaps to visualize the similarities betweem m-DAGs. We again consider colors to represent the different Kingdoms.\n\ndff&lt;-meta_taxo[1:884,] %&gt;% select(Kingdom)  %&gt;% as.data.frame()\ncolorsK &lt;- list(Kingdom= c(\"Animals\"=\"red\",\n                           \"Plants\"=\"green\",\n                           \"Fungi\"=\"yellow\",\n                           \"Protists\"=\"black\"))\nannotationK &lt;- HeatmapAnnotation(df=dff, col = colorsK,show_legend = TRUE)\n\nMSA_heat_1 &lt;- Heatmap(matrix = Sim_MSA_mDAG, \n                      column_title=\n                        \"m-DAGs MSA-similarity Eukaryotes by Kingdoms\",\n                      heatmap_legend_param=list(\n                        title=\"Similarity\",\n                        at = seq(0,1,by=0.1)),\n                      col=rev(viridis(256)),\n                      cluster_rows = FALSE,\n                      cluster_columns = FALSE,\n                      top_annotation = annotationK,\n                      show_column_names = FALSE, \n                      show_row_names = FALSE,\n                      left_annotation =\n                        rowAnnotation(df = dff,\n                                      col = colorsK,\n                                    show_annotation_name=FALSE,\n                                    show_legend=FALSE\n                                      ))\n\n\nMun_heat_1 &lt;- Heatmap(matrix = Sim_Mun_mDAG, \n             column_title=\"m-DAGs Munkres-similarity  Eukaryotes by Kingdoms\",\n            name = \"Munkres Similarity\",\n            heatmap_legend_param=list(\n                        title=\"Similarity\",\n                        at = seq(0,1,by=0.1)),\n                      col=rev(viridis(256)),\n                      cluster_rows = FALSE,\n                      cluster_columns = FALSE,\n                      top_annotation = annotationK,\n                      show_column_names = FALSE, \n                      show_row_names = FALSE,\n                      left_annotation =\n                        rowAnnotation(df = dff,\n                                      col = colorsK,\n                                    show_annotation_name=FALSE,\n                                    show_legend=FALSE                                                                        ))\n\n\n##  Animals by phylum\n\nmeta_animals  = meta_taxo %&gt;% filter(Kingdom==\"Animals\")\nnamesP=names(rev(sort(table(meta_animals$Phylum))))\nnamesP\n\n [1] \"Vertebrates\"      \"Arthropods\"       \"Mollusks\"         \"Cnidarians\"      \n [5] \"Nematodes\"        \"Flatworms\"        \"Echinoderms\"      \"Tunicates\"       \n [9] \"Cephalochordates\" \"Poriferans\"       \"Placozoans\"       \"Hemichordates\"   \n[13] \"Brachiopodas\"     \"Annelids\"        \n\ndff=data.frame(Phylum=meta_animals$Phylum)\nPhylum=ordered(meta_animals$Phylum,levels=namesP)\nnumbersP=paste(c(paste0(0,1:9),10:14),namesP,sep=\"-\")\nlevels(Phylum)=numbersP\ndff$Phylum=Phylum\ncol=rainbow(length(namesP))\n\ncolorsP=list(Phylum=col)\nnames(colorsP$Phylum)=numbersP\n\nannot &lt;- HeatmapAnnotation(df = dff, \n                               col = colorsP,\n                               annotation_name_side = \"left\",\n                               show_annotation_name=TRUE )\n\nMSA_heat_2 &lt;-  Heatmap(\n  matrix = Sim_MSA_mDAG[meta_animals$mDAG_Id,\n                        meta_animals$mDAG_Id],\n  name = \"MSA similarity\",\n  column_title = \"m-DAGs MSA-similarity  Animals by Phyla\",\n  col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\n\n\n\nMun_heat_2 &lt;- Heatmap(\n  matrix = Sim_Mun_mDAG[meta_animals$mDAG_Id,\n                        meta_animals$mDAG_Id],\n  column_title = \"m-DAGs Munkres-similarity  Animals by Phyla\",\n col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\n\ndraw(MSA_heat_1,merge_legend=TRUE)\n\n\n\ndraw(MSA_heat_2,merge_legend=TRUE)\n\n\n\ndraw(Mun_heat_1,merge_legend=TRUE)\n\n\n\ndraw(Mun_heat_2,merge_legend=TRUE)"
  },
  {
    "objectID": "m_DAGs_similarity.html#mds-multidimensional-scaling-msa-munkres-similarities",
    "href": "m_DAGs_similarity.html#mds-multidimensional-scaling-msa-munkres-similarities",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.3 MDS (Multidimensional Scaling) MSA & Munkres similarities",
    "text": "4.3 MDS (Multidimensional Scaling) MSA & Munkres similarities\nMulti-dimensional Scaling (MDS) is a classic multivariate data analysis technique that allows for obtaining a low-dimensional representation of the observed similarities. First, we transform each similarity measure into a distance measure as follows: let \\(s_{ij}\\) be a similarity measure between a pair \\(i,j\\), we define its distance measure as \\(d_{ij}=\\sqrt{1-s_{ij}^2}\\).\nThe following is the MDS for the MSA distance:\n\n## Metric multidimensional scaling (mMDS)\nmds7 &lt;- cmdscale(sqrt(1-Sim_MSA_mDAG^2),k=7,eig=TRUE)\nmds7$GOF\n\n[1] 0.4449519 0.5570199\n\nmds &lt;- mds7$points %&gt;%  as_tibble()\ncolnames(mds) &lt;-paste0(\"Dim.\",1:dim(mds7$points)[2])\n\n\ncooordinates=as_tibble(mds7$points)\ncolnames(cooordinates)=paste(\"Component\",1:7)\nggpairs(cooordinates,columns=1:4,\n        aes(color=meta_taxo$Kingdom[1:884],\n            title=\"MDS 4 dimensions projection\",legend=1),\n        lower=list(continuous=\"points\")) + \n  scale_fill_manual(values = colorsK$Kingdom) + \n  theme(legend.position = \"left\")\n\n\n\n\n\n\n\n\nThe following is the MDS for the Munkres distance:\n\n## Metric multidimensional scaling\nmds7 &lt;- cmdscale(sqrt(1-Sim_Mun_mDAG^2),k=7,eig=TRUE)\nmds7$GOF\n\n[1] 0.5605691 0.5800736\n\nmds &lt;- mds7$points %&gt;%  as_tibble()\ncolnames(mds) &lt;-paste0(\"Dim.\",1:dim(mds7$points)[2])\n\ncooordinates=as_tibble(mds7$points)\ncolnames(cooordinates)=paste(\"Component\",1:7)\nggpairs(cooordinates,columns=1:4,\n        aes(color=meta_taxo$Kingdom[1:884],\n            title=\"MDS 4 dimensions projection\",legend=1),\n        lower=list(continuous=\"points\")) + \n  scale_fill_manual(values = colorsK$Kingdom) + \n  theme(legend.position = \"left\")"
  },
  {
    "objectID": "m_DAGs_similarity.html#hierarchical-clustering-msa-similarity",
    "href": "m_DAGs_similarity.html#hierarchical-clustering-msa-similarity",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.4 Hierarchical clustering MSA similarity",
    "text": "4.4 Hierarchical clustering MSA similarity\nThrough hierarchical clustering using the Ward method, we have derived a partition of the m-DAGs into 4, 5, and 6 clusters, respectively. The corresponding information has been organized into a table, as follows:\n\nD=as.dist(sqrt(1-Sim_MSA_mDAG^2))\nhc_MSA=hclust(as.dist(D),method =\"ward.D\")\nclust4_MSA=cutree(hc_MSA,4)\ntable(clust4_MSA,meta_taxo$Kingdom[1:884])\n\n          \nclust4_MSA Animals Fungi Plants Protists\n         1     331     0      0        0\n         2     197     0      0        0\n         3       7   154     14       56\n         4       0     0    125        0\n\n\n\nclust5_MSA=cutree(hc_MSA,5)\ntable(clust5_MSA,meta_taxo$Kingdom[1:884])\n\n          \nclust5_MSA Animals Fungi Plants Protists\n         1     129     0      0        0\n         2     202     0      0        0\n         3     197     0      0        0\n         4       7   154     14       56\n         5       0     0    125        0\n\n\n\nclust6_MSA=cutree(hc_MSA,6)\ntable(clust6_MSA,meta_taxo$Kingdom[1:884])\n\n          \nclust6_MSA Animals Fungi Plants Protists\n         1     129     0      0        0\n         2     202     0      0        0\n         3     197     0      0        0\n         4       7   149     14       34\n         5       0     5      0       22\n         6       0     0    125        0\n\n\nWe can also create a table that correlates the clusters (in this case, two clusters) with the Phylum classification:\n\naux=meta_taxo[1:884,] %&gt;%\n  select(Organism,Kingdom,Phylum,Class,Full_Name)\naux$clust4_MSA=clust4_MSA\naux_Animals_cluster_1_2 = aux %&gt;%\n  filter(Kingdom==\"Animals\",clust4_MSA %in% c(1,2))\n\ntable(aux_Animals_cluster_1_2$Phylum,aux_Animals_cluster_1_2$clust4_MSA)\n\n                  \n                     1   2\n  Annelids           0   1\n  Arthropods         0 158\n  Brachiopodas       0   1\n  Cephalochordates   0   2\n  Cnidarians         0  10\n  Echinoderms        0   3\n  Hemichordates      0   1\n  Mollusks           0  14\n  Nematodes          0   3\n  Placozoans         0   1\n  Poriferans         0   1\n  Tunicates          0   2\n  Vertebrates      331   0\n\n\nWe can retrieve the information of the elements belonging to a specific classification (Animals and Plants) that are part of a particular cluster as follows:\n\naux_7_Animals_cluster_3= filter(aux,\n                                clust4_MSA==3,\n                                Kingdom==\"Animals\")\naux_7_Animals_cluster_3\n\n# A tibble: 7 × 6\n  Organism Kingdom Phylum    Class     Full_Name                      clust4_MSA\n  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;                               &lt;int&gt;\n1 bmy      Animals Nematodes Nematodes Brugia malayi (filaria)                 3\n2 loa      Animals Nematodes Nematodes Loa loa (eye worm)                      3\n3 tsp      Animals Nematodes Nematodes Trichinella spiralis                    3\n4 egl      Animals Flatworms Flatworms Echinococcus granulosus (hyda…          3\n5 ovi      Animals Flatworms Flatworms Opisthorchis viverrini (South…          3\n6 shx      Animals Flatworms Flatworms Schistosoma haematobium (urin…          3\n7 smm      Animals Flatworms Flatworms Schistosoma mansoni                     3\n\naux_14_Plants_clust_3= filter(aux,clust4_MSA==3,\n                             Kingdom==\"Plants\")\naux_14_Plants_clust_3\n\n# A tibble: 14 × 6\n   Organism Kingdom Phylum Class Full_Name                      clust4_MSA\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                               &lt;int&gt;\n 1 apro     Plants  Green  algae Auxenochlorella protothecoides          3\n 2 bpg      Plants  Green  algae Bathycoccus prasinos                    3\n 3 cre      Plants  Green  algae Chlamydomonas reinhardtii               3\n 4 csl      Plants  Green  algae Coccomyxa subellipsoidea                3\n 5 cvr      Plants  Green  algae Chlorella variabilis                    3\n 6 mis      Plants  Green  algae Micromonas commoda                      3\n 7 mng      Plants  Green  algae Monoraphidium neglectum                 3\n 8 mpp      Plants  Green  algae Micromonas pusilla                      3\n 9 olu      Plants  Green  algae Ostreococcus lucimarinus                3\n10 ota      Plants  Green  algae Ostreococcus tauri                      3\n11 vcn      Plants  Green  algae Volvox carteri f. nagariensis           3\n12 ccp      Plants  Red    algae Chondrus crispus (carragheen)           3\n13 cme      Plants  Red    algae Cyanidioschyzon merolae                 3\n14 gsl      Plants  Red    algae Galdieria sulphuraria                   3\n\n\nWe can retrieve the information of the elements from a specific Phylum or Class, and the cluster they belong to, as follows:\n\naux_all_Nematodes_Flatworns= aux %&gt;% \n  filter(Kingdom==\"Animals\",\n         Phylum %in% c(\"Nematodes\",\"Flatworms\"))\naux_all_Nematodes_Flatworns\n\n# A tibble: 10 × 6\n   Organism Kingdom Phylum    Class     Full_Name                     clust4_MSA\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;                              &lt;int&gt;\n 1 bmy      Animals Nematodes Nematodes Brugia malayi (filaria)                3\n 2 cbr      Animals Nematodes Nematodes Caenorhabditis briggsae (nem…          2\n 3 cel      Animals Nematodes Nematodes Caenorhabditis elegans (nema…          2\n 4 loa      Animals Nematodes Nematodes Loa loa (eye worm)                     3\n 5 nai      Animals Nematodes Nematodes Necator americanus (New Worl…          2\n 6 tsp      Animals Nematodes Nematodes Trichinella spiralis                   3\n 7 egl      Animals Flatworms Flatworms Echinococcus granulosus (hyd…          3\n 8 ovi      Animals Flatworms Flatworms Opisthorchis viverrini (Sout…          3\n 9 shx      Animals Flatworms Flatworms Schistosoma haematobium (uri…          3\n10 smm      Animals Flatworms Flatworms Schistosoma mansoni                    3\n\n\nThe class Algae are all in the same cluster:\n\naux_all_algae_class= aux %&gt;% \n  filter(Kingdom==\"Plants\",\n         Class %in% c(\"algae\"))\naux_all_algae_class\n\n# A tibble: 14 × 6\n   Organism Kingdom Phylum Class Full_Name                      clust4_MSA\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                               &lt;int&gt;\n 1 apro     Plants  Green  algae Auxenochlorella protothecoides          3\n 2 bpg      Plants  Green  algae Bathycoccus prasinos                    3\n 3 cre      Plants  Green  algae Chlamydomonas reinhardtii               3\n 4 csl      Plants  Green  algae Coccomyxa subellipsoidea                3\n 5 cvr      Plants  Green  algae Chlorella variabilis                    3\n 6 mis      Plants  Green  algae Micromonas commoda                      3\n 7 mng      Plants  Green  algae Monoraphidium neglectum                 3\n 8 mpp      Plants  Green  algae Micromonas pusilla                      3\n 9 olu      Plants  Green  algae Ostreococcus lucimarinus                3\n10 ota      Plants  Green  algae Ostreococcus tauri                      3\n11 vcn      Plants  Green  algae Volvox carteri f. nagariensis           3\n12 ccp      Plants  Red    algae Chondrus crispus (carragheen)           3\n13 cme      Plants  Red    algae Cyanidioschyzon merolae                 3\n14 gsl      Plants  Red    algae Galdieria sulphuraria                   3"
  },
  {
    "objectID": "m_DAGs_similarity.html#hierarchical-clustering-munkres-similarity",
    "href": "m_DAGs_similarity.html#hierarchical-clustering-munkres-similarity",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.5 Hierarchical clustering Munkres similarity",
    "text": "4.5 Hierarchical clustering Munkres similarity\nAnalogous to the MSA similarity we obtain a classification of the m-DAGs into different clusters and retrieve the cluster’s information as follows:\n\nD=as.dist(sqrt(1-Sim_Mun_mDAG^2))\nhc_Mun=hclust(as.dist(D),method =\"ward.D\")\n\n\nclust4_Mun=cutree(hc_Mun,4)\ntable(clust4_Mun,meta_taxo$Kingdom[1:884])\n\n          \nclust4_Mun Animals Fungi Plants Protists\n         1     331     0      0        0\n         2     197     0      0        0\n         3       7   154     14       56\n         4       0     0    125        0\n\n\n\naux=meta_taxo[1:884,] %&gt;%\n  select(Organism,Kingdom,Phylum,Class,Full_Name)\naux$clust4_Mun=clust4_Mun\naux_Animals_cluster_1_2_Mun = aux %&gt;%\n  filter(Kingdom==\"Animals\",clust4_Mun %in% c(1,2))\n\ntable(aux_Animals_cluster_1_2_Mun$Phylum,\n      aux_Animals_cluster_1_2_Mun$clust4_Mun)\n\n                  \n                     1   2\n  Annelids           0   1\n  Arthropods         0 158\n  Brachiopodas       0   1\n  Cephalochordates   0   2\n  Cnidarians         0  10\n  Echinoderms        0   3\n  Hemichordates      0   1\n  Mollusks           0  14\n  Nematodes          0   3\n  Placozoans         0   1\n  Poriferans         0   1\n  Tunicates          0   2\n  Vertebrates      331   0\n\naux_7_Animals_cluster_3_Mun= filter(aux,\n                                clust4_Mun==3,\n                                Kingdom==\"Animals\")\naux_7_Animals_cluster_3_Mun\n\n# A tibble: 7 × 6\n  Organism Kingdom Phylum    Class     Full_Name                      clust4_Mun\n  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;                               &lt;int&gt;\n1 bmy      Animals Nematodes Nematodes Brugia malayi (filaria)                 3\n2 loa      Animals Nematodes Nematodes Loa loa (eye worm)                      3\n3 tsp      Animals Nematodes Nematodes Trichinella spiralis                    3\n4 egl      Animals Flatworms Flatworms Echinococcus granulosus (hyda…          3\n5 ovi      Animals Flatworms Flatworms Opisthorchis viverrini (South…          3\n6 shx      Animals Flatworms Flatworms Schistosoma haematobium (urin…          3\n7 smm      Animals Flatworms Flatworms Schistosoma mansoni                     3\n\naux_all_Nematodes_Flatworns= aux %&gt;% \n  filter(Kingdom==\"Animals\",\n         Phylum %in% c(\"Nematodes\",\"Flatworms\"))\naux_all_Nematodes_Flatworns\n\n# A tibble: 10 × 6\n   Organism Kingdom Phylum    Class     Full_Name                     clust4_Mun\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;                              &lt;int&gt;\n 1 bmy      Animals Nematodes Nematodes Brugia malayi (filaria)                3\n 2 cbr      Animals Nematodes Nematodes Caenorhabditis briggsae (nem…          2\n 3 cel      Animals Nematodes Nematodes Caenorhabditis elegans (nema…          2\n 4 loa      Animals Nematodes Nematodes Loa loa (eye worm)                     3\n 5 nai      Animals Nematodes Nematodes Necator americanus (New Worl…          2\n 6 tsp      Animals Nematodes Nematodes Trichinella spiralis                   3\n 7 egl      Animals Flatworms Flatworms Echinococcus granulosus (hyd…          3\n 8 ovi      Animals Flatworms Flatworms Opisthorchis viverrini (Sout…          3\n 9 shx      Animals Flatworms Flatworms Schistosoma haematobium (uri…          3\n10 smm      Animals Flatworms Flatworms Schistosoma mansoni                    3\n\naux_14_Plants_clust2_Mun= filter(aux,clust4_Mun==3,\n                             Kingdom==\"Plants\")\naux_14_Plants_clust2_Mun\n\n# A tibble: 14 × 6\n   Organism Kingdom Phylum Class Full_Name                      clust4_Mun\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                               &lt;int&gt;\n 1 apro     Plants  Green  algae Auxenochlorella protothecoides          3\n 2 bpg      Plants  Green  algae Bathycoccus prasinos                    3\n 3 cre      Plants  Green  algae Chlamydomonas reinhardtii               3\n 4 csl      Plants  Green  algae Coccomyxa subellipsoidea                3\n 5 cvr      Plants  Green  algae Chlorella variabilis                    3\n 6 mis      Plants  Green  algae Micromonas commoda                      3\n 7 mng      Plants  Green  algae Monoraphidium neglectum                 3\n 8 mpp      Plants  Green  algae Micromonas pusilla                      3\n 9 olu      Plants  Green  algae Ostreococcus lucimarinus                3\n10 ota      Plants  Green  algae Ostreococcus tauri                      3\n11 vcn      Plants  Green  algae Volvox carteri f. nagariensis           3\n12 ccp      Plants  Red    algae Chondrus crispus (carragheen)           3\n13 cme      Plants  Red    algae Cyanidioschyzon merolae                 3\n14 gsl      Plants  Red    algae Galdieria sulphuraria                   3\n\naux_all_algae_class= aux %&gt;% \n  filter(Kingdom==\"Plants\",\n         Class %in% c(\"algae\"))\naux_all_algae_class\n\n# A tibble: 14 × 6\n   Organism Kingdom Phylum Class Full_Name                      clust4_Mun\n   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                               &lt;int&gt;\n 1 apro     Plants  Green  algae Auxenochlorella protothecoides          3\n 2 bpg      Plants  Green  algae Bathycoccus prasinos                    3\n 3 cre      Plants  Green  algae Chlamydomonas reinhardtii               3\n 4 csl      Plants  Green  algae Coccomyxa subellipsoidea                3\n 5 cvr      Plants  Green  algae Chlorella variabilis                    3\n 6 mis      Plants  Green  algae Micromonas commoda                      3\n 7 mng      Plants  Green  algae Monoraphidium neglectum                 3\n 8 mpp      Plants  Green  algae Micromonas pusilla                      3\n 9 olu      Plants  Green  algae Ostreococcus lucimarinus                3\n10 ota      Plants  Green  algae Ostreococcus tauri                      3\n11 vcn      Plants  Green  algae Volvox carteri f. nagariensis           3\n12 ccp      Plants  Red    algae Chondrus crispus (carragheen)           3\n13 cme      Plants  Red    algae Cyanidioschyzon merolae                 3\n14 gsl      Plants  Red    algae Galdieria sulphuraria                   3"
  },
  {
    "objectID": "m_DAGs_similarity.html#comparison-between-msa-and-munkres-similarities",
    "href": "m_DAGs_similarity.html#comparison-between-msa-and-munkres-similarities",
    "title": "4  m-DAGs similarities and Metadata",
    "section": "4.6 Comparison between MSA and Munkres similarities",
    "text": "4.6 Comparison between MSA and Munkres similarities\nIn order to compare the two similarities we consider the Spearman and Pearson correlation. First, we load the similarities for every pair of m-DAG and each similarity measure.\n\nn=length(meta_taxo$mDAG_Id[1:884])\nn\n\n[1] 884\n\ndim(Sim_MSA_mDAG)\n\n[1] 884 884\n\naux=as_tibble(Sim_MSA_mDAG)\naux$mDag=names(aux)\naux=aux %&gt;% pivot_longer(cols=`0313`:`0300`,\n                         names_to=\"mDag_2\",\n                         values_to=\"Sim_MSA\")\n\naux_2= aux %&gt;%  mutate(i=pmax(as.integer(mDag),\n                              as.integer(mDag_2)),\n                       j=pmin(as.integer(mDag),\n                       as.integer(mDag_2))) %&gt;% unite(\"ij\",i:j) %&gt;%\n  filter(duplicated(ij))\n\n\naux=as_tibble(Sim_Mun_mDAG)\naux$mDag=names(aux)\naux=aux %&gt;% pivot_longer(cols=`0313`:`0300`,\n                         names_to=\"mDag_2\",\n                         values_to=\"Sim_Mun\")\naux_2 = aux_2 %&gt;% left_join(aux)\n\nSim_comp=aux_2\nrm(aux,aux_2)\n\nNext we obtain the Spearman and Pearson correlations as follows:\n\ncor(Sim_comp[,c(3,5)],method=\"spearman\")\n\n          Sim_MSA   Sim_Mun\nSim_MSA 1.0000000 0.8930995\nSim_Mun 0.8930995 1.0000000\n\ncor(Sim_comp[,c(3,5)],method=\"pearson\")\n\n          Sim_MSA   Sim_Mun\nSim_MSA 1.0000000 0.9203871\nSim_Mun 0.9203871 1.0000000\n\n\n\nGGally::ggpairs(Sim_comp[,c(3,5)])\n\n\n\n\n\nsim_pairs= Sim_comp%&gt;% pivot_longer(\n  cols=c(Sim_MSA,Sim_Mun),\n  names_to=\"Method\",\n  values_to=\"Similarity\")\n\nggstatsplot::ggbetweenstats(\n  data = sim_pairs,\n  x = Method,\n  y = Similarity,\n  centrality.plotting=TRUE)\n\n\n\n\n\nlibrary(hrbrthemes)\nlibrary(viridis)\nsim_pairs %&gt;%\n  ggplot( aes(x=Method, y=Similarity, fill=Method)) +\n  geom_boxplot() +\n  scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n  theme(legend.position=\"none\")+\n  ggtitle(\"Boxplot diagram of the similarities between the two aproaches\") \n\n\n\n\nBasic statistics similarity\n\nsim_pairs %&gt;% group_by(Method) %&gt;% \n  summarise(N=n(),\n          mean=mean(Similarity),\n          sd=sd(Similarity),\n          Q1=quantile(Similarity,0.25),\n          median=quantile(Similarity,0.5),\n          Q3=quantile(Similarity,0.75))\n\n# A tibble: 2 × 7\n  Method       N  mean    sd    Q1 median    Q3\n  &lt;chr&gt;    &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 Sim_MSA 390286 0.672 0.182 0.559  0.670 0.781\n2 Sim_Mun 390286 0.547 0.202 0.427  0.509 0.635"
  },
  {
    "objectID": "cluster_analysis.html",
    "href": "cluster_analysis.html",
    "title": "5  Clusters analysis",
    "section": "",
    "text": "load(file='metadag_work_space.RData')\n\nIn the Eukaryotes test, we aimed to analyze which factors caused some algae and plants to be distinguished from their respective kingdoms. To address this question, we revisited the core metabolism obtained with MetaDAG, focusing on each cluster.\n\nreactions=names(Results)\nreactions=reactions[grep(\"(^R\\\\d{5})\",reactions)]\nreactions=tibble(reactions)\nreactions=reactions %&gt;% separate(reactions, into=c(\"r_id\",\"enzyme\"),sep=\"\\\\(\",remove=FALSE)\nreactions=reactions %&gt;% mutate(enzyme=gsub(\"\\\\(|\\\\)\",\"\",enzyme))\n#reactions=reactions[,-3]\nreactions$rev=stringr::str_detect(reactions$r_id,\"v\")\n\nThe results of the clusters are compared to the classification of Kingdoms for both similarity measures:\n\nclust4_MSA2=tibble(mDAG_Id=names(clust4_MSA), clust4_MSA=clust4_MSA)\nclust4_Mun2=tibble(mDAG_Id=names(clust4_Mun), clust4_Mun=clust4_Mun)\nmeta_taxo2=meta_taxo\nmeta_taxo2=meta_taxo2 %&gt;% left_join(clust4_MSA2,by= \"mDAG_Id\") %&gt;% \n  left_join(clust4_Mun2,by= \"mDAG_Id\")\nmeta_taxo2$combined_cluster_MSA_Kingdom=paste0(meta_taxo2$Kingdom,meta_taxo2$clust4_MSA)\nmeta_taxo2$combined_cluster_Mun_Kingdom=paste0(meta_taxo2$Kingdom,meta_taxo2$clust4_MSA)\nwrite.csv(meta_taxo2,file=\"meta_taxo_4_clusters.csv\")\n\n\nknitr::kable(table(meta_taxo2$Kingdom,meta_taxo2$clust4_MSA))\n\n\n\n\n\n1\n2\n3\n4\n\n\n\n\nAnimals\n331\n197\n7\n0\n\n\nFungi\n0\n0\n154\n0\n\n\nPlants\n0\n0\n14\n125\n\n\nProtists\n0\n0\n56\n0\n\n\n\n\n\n\nknitr::kable(table(meta_taxo2$Kingdom,meta_taxo2$clust4_Mun))\n\n\n\n\n\n1\n2\n3\n4\n\n\n\n\nAnimals\n331\n197\n7\n0\n\n\nFungi\n0\n0\n154\n0\n\n\nPlants\n0\n0\n14\n125\n\n\nProtists\n0\n0\n56\n0\n\n\n\n\n\n\nknitr::kable(table(meta_taxo2$clust4_Mun,meta_taxo2$clust4_MSA))\n\n\n\n\n1\n2\n3\n4\n\n\n\n\n331\n0\n0\n0\n\n\n0\n197\n0\n0\n\n\n0\n0\n231\n0\n\n\n0\n0\n0\n125\n\n\n\n\n\n\n\nThe table below correlates the clusters with the Phylum information.\n\nlibrary(reshape2)\nMSA_table=melt(table(meta_taxo2$Kingdom,meta_taxo2$Phylum,meta_taxo2$clust4_MSA))\nnames(MSA_table)=c(\"Kingdom\",\"Phylum\",\"cluster_MSA\",\"N\")\nMSA_table=MSA_table %&gt;% filter(N!=0)\n\n\nknitr::kable(MSA_table)\n\n\n\n\nKingdom\nPhylum\ncluster_MSA\nN\n\n\n\n\nAnimals\nVertebrates\n1\n331\n\n\nAnimals\nAnnelids\n2\n1\n\n\nAnimals\nArthropods\n2\n158\n\n\nAnimals\nBrachiopodas\n2\n1\n\n\nAnimals\nCephalochordates\n2\n2\n\n\nAnimals\nCnidarians\n2\n10\n\n\nAnimals\nEchinoderms\n2\n3\n\n\nAnimals\nHemichordates\n2\n1\n\n\nAnimals\nMollusks\n2\n14\n\n\nAnimals\nNematodes\n2\n3\n\n\nAnimals\nPlacozoans\n2\n1\n\n\nAnimals\nPoriferans\n2\n1\n\n\nAnimals\nTunicates\n2\n2\n\n\nProtists\nAlveolates\n3\n25\n\n\nProtists\nAmoebozoa\n3\n7\n\n\nFungi\nAscomycetes\n3\n113\n\n\nFungi\nBasidiomycetes\n3\n36\n\n\nProtists\nChoanoflagellates\n3\n2\n\n\nProtists\nCryptomonads\n3\n1\n\n\nProtists\nEuglenozoa\n3\n9\n\n\nAnimals\nFlatworms\n3\n4\n\n\nPlants\nGreen\n3\n11\n\n\nProtists\nHaptophyta\n3\n1\n\n\nProtists\nHeterolobosea\n3\n1\n\n\nProtists\nMetamonada\n3\n2\n\n\nFungi\nMicrosporidians\n3\n5\n\n\nAnimals\nNematodes\n3\n3\n\n\nPlants\nRed\n3\n3\n\n\nProtists\nStramenopiles\n3\n8\n\n\nPlants\nBasal\n4\n2\n\n\nPlants\nEudicots\n4\n98\n\n\nPlants\nFerns\n4\n1\n\n\nPlants\nMonocots\n4\n23\n\n\nPlants\nMosses\n4\n1"
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "6  Appendix",
    "section": "",
    "text": "Some tables and graphs for the supplementary material.\n\nload(file='metadag_work_space.RData')\n\nTable MBB sizes\n\nwrite_delim=write_delim(table_MBB_size,\n                        file=\"data_appendix/table_MBB_size.csv\",\n                        delim=\",\")\n\n\nclust4_MSA2=tibble(mDAG_Id=names(clust4_MSA),\n                      clust4_MSA=as.integer(clust4_MSA))\nclust4_Mun2=tibble(mDAG_Id=names(clust4_Mun),\n                      clust4_Mun=as.integer(clust4_Mun))\n\nclust4_MSA_Eukaryotes_taxo= meta_taxo %&gt;% filter(!is.na(Kingdom))%&gt;%\n  select(-c(Freq_Kingdom,Freq_Phylum,Freq_Class)) %&gt;%\n  left_join(clust4_MSA2,by=\"mDAG_Id\")\n  \nclust4_Mun_Eukaryotes_taxo= meta_taxo %&gt;% filter(!is.na(Kingdom))%&gt;%\n  select(-c(Freq_Kingdom,Freq_Phylum,Freq_Class)) %&gt;%\n  left_join(clust4_Mun2,by=\"mDAG_Id\")\n  \n\n\n\nwrite_delim(clust4_MSA_Eukaryotes_taxo,\n                        file=\"data_appendix/clust4_MSA_Eukaryotes_taxo.csv\",\n                        delim=\",\")\nwrite_delim(clust4_Mun_Eukaryotes_taxo,\n                        file=\"data_appendix/clust4_Mun_Eukaryotes_taxo.csv\",\n                        delim=\",\")\n\nHeatmaps by Kingdom MSA y Mun: Animals, Fungi, Plants ans Protists.\nAnimals\n\n##  Animals by phylum\nmeta_animals= meta_taxo %&gt;% filter(Kingdom==\"Animals\")\nnamesP=names(rev(sort(table(meta_animals$Phylum))))\nnamesP\n\n [1] \"Vertebrates\"      \"Arthropods\"       \"Mollusks\"         \"Cnidarians\"      \n [5] \"Nematodes\"        \"Flatworms\"        \"Echinoderms\"      \"Tunicates\"       \n [9] \"Cephalochordates\" \"Poriferans\"       \"Placozoans\"       \"Hemichordates\"   \n[13] \"Brachiopodas\"     \"Annelids\"        \n\ndff=data.frame(Phylum=meta_animals$Phylum)\nPhylum=ordered(meta_animals$Phylum,levels=namesP)\nnumbersP=paste(c(paste0(0,1:9),10:14),namesP,sep=\"-\")\nlevels(Phylum)=numbersP\ndff$Phylum=Phylum\ncol=rainbow(length(namesP))\n\ncolorsP=list(Phylum=col)\nnames(colorsP$Phylum)=numbersP\n\nannot &lt;- HeatmapAnnotation(df = dff, \n                               col = colorsP,\n                               annotation_name_side = \"left\",\n                               show_annotation_name=TRUE )\n\nMSA_heat_2 &lt;-  Heatmap(\n  matrix = Sim_MSA_mDAG[meta_animals$mDAG_Id,\n                        meta_animals$mDAG_Id],\n  name = \"MSA similarity\",\n  column_title = \"m-DAGs MSA-similarity  Animals by Phyla\",\n  col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\n\n\n\nMun_heat_2 &lt;- Heatmap(\n  matrix = Sim_Mun_mDAG[meta_animals$mDAG_Id,\n                        meta_animals$mDAG_Id],\n  column_title = \"m-DAGs Munkres-similarity  Animals by Phyla\",\n col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nSave graphics\n\n\npng \n  2 \n\n\npng \n  2 \n\n\n\n\n\n\n\n\n\n\nPlants\n\nmeta_plants= meta_taxo[1:884,] %&gt;% filter(Kingdom==\"Plants\")\nnamesP=names(rev(sort(table(meta_plants$Phylum))))\nnamesP\n\n[1] \"Eudicots\" \"Monocots\" \"Green\"    \"Red\"      \"Basal\"    \"Mosses\"   \"Ferns\"   \n\ndff=data.frame(Phylum=meta_plants$Phylum)\nPhylum=ordered(meta_plants$Phylum,levels=namesP)\nnumbersP=paste(c(paste0(0,1:7)),namesP,sep=\"-\")\nlevels(Phylum)=numbersP\ndff$Phylum=Phylum\ncol=rainbow(length(namesP))\n\ncolorsP=list(Phylum=col)\nnames(colorsP$Phylum)=numbersP\n\nannot &lt;- HeatmapAnnotation(df = dff, \n                               col = colorsP,\n                               annotation_name_side = \"left\",\n                               show_annotation_name=TRUE )\n\nMSA_heat_2 &lt;-  Heatmap(\n  matrix = Sim_MSA_mDAG[meta_plants$mDAG_Id,\n                        meta_plants$mDAG_Id],\n  name = \"MSA similarity\",\n  column_title = \"m-DAGs MSA-similarity  Plants by Phyla\",\n  col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nMun_heat_2 &lt;- Heatmap(\n  matrix = Sim_Mun_mDAG[meta_plants$mDAG_Id,\n                        meta_plants$mDAG_Id],\n    name = \"Mun similarity\",\n  column_title = \"m-DAGs Munkres-similarity  Plants by Phyla\",\ncol = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nSave graphics\n\n\npng \n  2 \n\n\npng \n  2 \n\n\n\n\n\n\n\n\n\n\nFungi\n\nmeta_fungi= meta_taxo%&gt;% filter(Kingdom==\"Fungi\")\nnamesP=names(rev(sort(table(meta_fungi$Phylum))))\nnamesP\n\n[1] \"Ascomycetes\"     \"Basidiomycetes\"  \"Microsporidians\"\n\ndff=data.frame(Phylum=meta_fungi$Phylum)\nPhylum=ordered(meta_fungi$Phylum,levels=namesP)\nn=length(namesP)\n\nnumbersP=paste(c(paste0(0,1:n)),namesP,sep=\"-\")\nlevels(Phylum)=numbersP\ndff$Phylum=Phylum\ncol=rainbow(length(namesP))\n\ncolorsP=list(Phylum=col)\nnames(colorsP$Phylum)=numbersP\n\nannot &lt;- HeatmapAnnotation(df = dff, \n                               col = colorsP,\n                               annotation_name_side = \"left\",\n                               show_annotation_name=TRUE )\n\nMSA_heat_2 &lt;-  Heatmap(\n  matrix = Sim_MSA_mDAG[meta_fungi$mDAG_Id,\n                        meta_fungi$mDAG_Id],\n  name = \"MSA similarity\",\n  column_title = \"m-DAGs MSA-similarity  Fungi by Phyla\",\n  col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nMun_heat_2 &lt;- Heatmap(\n  matrix = Sim_Mun_mDAG[meta_fungi$mDAG_Id,\n                        meta_fungi$mDAG_Id],\n    name = \"Mun similarity\",\n  column_title = \"m-DAGs Munkres-similarity  Fungi by Phyla\",\ncol = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nSave graphics\n\n\npng \n  2 \n\n\npng \n  2 \n\n\n\n\n\n\n\n\n\n\nProtists\n\nmeta_protists= meta_taxo %&gt;% filter(Kingdom==\"Protists\")\n\nnamesP=names(rev(sort(table(meta_protists$Phylum))))\nnamesP\n\n[1] \"Alveolates\"        \"Euglenozoa\"        \"Stramenopiles\"    \n[4] \"Amoebozoa\"         \"Metamonada\"        \"Choanoflagellates\"\n[7] \"Heterolobosea\"     \"Haptophyta\"        \"Cryptomonads\"     \n\ndff=data.frame(Phylum=meta_protists$Phylum)\nPhylum=ordered(meta_protists$Phylum,levels=namesP)\nn=length(namesP)\nnumbersP=paste(c(paste0(0,1:n)),namesP,sep=\"-\")\nlevels(Phylum)=numbersP\ndff$Phylum=Phylum\ncol=rainbow(length(namesP))\n\ncolorsP=list(Phylum=col)\nnames(colorsP$Phylum)=numbersP\n\nannot &lt;- HeatmapAnnotation(df = dff, \n                               col = colorsP,\n                               annotation_name_side = \"left\",\n                               show_annotation_name=TRUE )\n\nMSA_heat_2 &lt;-  Heatmap(\n  matrix = Sim_MSA_mDAG[meta_protists$mDAG_Id,\n                        meta_protists$mDAG_Id],\n  name = \"MSA similarity\",\n  column_title = \"m-DAGs MSA-similarity  Protist by Phyla\",\n  col = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nMun_heat_2 &lt;- Heatmap(\n  matrix = Sim_Mun_mDAG[meta_protists$mDAG_Id,\n                        meta_protists$mDAG_Id],\n    name = \"Mun similarity\",\n  column_title = \"m-DAGs Munkres-similarity  Protist by Phyla\",\ncol = rev(viridis(256)),\n  cluster_rows = FALSE,\n  show_heatmap_legend = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = annot,\n  show_column_names = FALSE,\n  show_row_names = FALSE,\n  left_annotation =\n    rowAnnotation(\n      df = dff,\n      col = colorsP,\n      show_annotation_name = FALSE\n    )\n)\n\nSave graphics\n\ndraw(MSA_heat_2,merge_legend=TRUE)\n\n\n\ndraw(Mun_heat_2,merge_legend=TRUE)"
  }
]